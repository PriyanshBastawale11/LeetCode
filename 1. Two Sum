import java.util.HashMap;
import java.util.Map;

public class Solution {
    public int[] twoSum(int[] nums, int target) {
        // Create a hashmap to store the difference and its index
        Map<Integer, Integer> map = new HashMap<>();

        // Iterate through the array
        for (int i = 0; i < nums.length; i++) {
            // Calculate the complement
            int complement = target - nums[i];

            // Check if the complement is already in the map
            if (map.containsKey(complement)) {
                // If found, return the indices
                return new int[]{map.get(complement), i};
            }

            // Store the current number with its index
            map.put(nums[i], i);
        }

        // Return an empty array (this line will never be reached as per constraints)
        return new int[]{};
    }
}
